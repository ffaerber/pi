version: '3.4'

volumes:
  prometheus_data:
    driver: local

networks:
  frontend:
  backend:

configs:
  prometheus.yml:
    file: ./stacks/system/configs/prometheus.yml


services:

  node-exporter:
    image: ffaerber/node_exporter-arm32v7
    networks:
      - frontend
      - backend
    deploy:
      mode: global

  traefik:
    image: traefik:v1.4.3
    command:
      - --docker
      - --docker.swarmmode
      - --docker.watch
      - --defaultEntryPoints=http,https
      - --entrypoints=Name:http Address::80 Redirect.EntryPoint:https
      - --entrypoints=Name:https Address::443 TLS
      - --acme.entryPoint=https
      - --acme.email=ffaerber@gmail.com
      - --acme.storage=/etc/traefik/acme/acme.json
      - --acme.domains=ffaerber.com
      - --acme.onHostRule=true
      - --acme.acmeLogging=true
      - --web
      - --web.metrics.prometheus
    networks:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/tmp:/etc/traefik/acme
    deploy:
      resources:
        limits:
          memory: 128M
      placement:
        constraints:
          - node.role == manager
          - node.hostname == pi1

  prometheus:
    image: ffaerber/prometheus-arm32v7
    networks:
      - frontend
      - backend
    volumes:
      - prometheus_data:/prometheus
    configs:
      - source: prometheus.yml
        target: /etc/prometheus/prometheus.yml
    deploy:
      resources:
        limits:
          memory: 512M
      labels:
        - "traefik.backend=prometheus"
        - "traefik.frontend.rule=Host:prometheus.ffaerber.com"
        - "traefik.port=9090"
      placement:
        constraints:
          - node.role == manager
          - node.hostname == pi2
