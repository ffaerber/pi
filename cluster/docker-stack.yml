version: '3.1'

volumes:
  redis_data:
    driver: local
  ethereum_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  traefik:
    external: true

secrets:
  certificate_crt:
    external: true
  private_key:
    external: true



services:

  node_exporter:
    image: zeiot/rpi-node_exporter:0.13.0
    ports:
      - "9100:9100"
    networks:
      traefik:
    deploy:
      mode: global

  traefik:
    image: hypriot/rpi-traefik
    command:
      - --docker
      - --docker.swarmmode
      - --docker.watch
      - --docker.domain=ffaerber.com
      - --defaultEntryPoints=http,https,ws,wss
      - --entrypoints=Name:http Address::80
      - --entryPoints=Name:https Address::443 TLS:/run/secrets/certificate_crt,/run/secrets/private_key
      - --web
      - --web.metrics.prometheus
    networks:
      traefik:
        aliases:
          - traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /dev/null:/etc/traefik/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock
    secrets:
      - private_key
      - certificate_crt
    deploy:
      placement:
        constraints:
          - node.hostname == odroid

  visualizer:
    image: yangxuan8282/armhf-visualizer
    networks:
      - traefik
    depends_on:
      - traefik
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    deploy:
      labels:
        - "traefik.backend=visualizer"
        - "traefik.frontend.rule=Host:visualizer.ffaerber.com"
        - "traefik.port=8080"
      placement:
        constraints:
          - node.role == manager

  mqtt_receiver:
    image: ffaerber/mqtt-receiver-on-arm:latest
    environment:
      MQTT_BROKER_HOST: mqtt://iot.eclipse.org
      MQTT_TOPIC: topic
    deploy:
      placement:
        constraints:
          - node.hostname == pi2

  socketio:
    image: ffaerber/socketio-arm:latest
    environment:
      DEBUG: socket.io*
    networks:
      - traefik
    depends_on:
      - traefik
    deploy:
      labels:
        - "traefik.backend=socketio"
        - "traefik.frontend.rule=Host:socketio.ffaerber.com"
        - "traefik.port=3000"
      placement:
        constraints:
          - node.hostname == pi3

  prometheus:
    image: fstehle/rpi-prometheus
    ports:
      - "9090:9090"
    networks:
      traefik:
        aliases:
          - prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.local.path=/prometheus
    deploy:
      placement:
        constraints:
          - node.role == manager

  redis:
    image: hypriot/rpi-redis
    networks:
      - traefik
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    deploy:
      placement:
        constraints:
          - node.hostname == pi4

  geth:
    image: ffaerber/geth-arm:latest
    ports:
      - "8545:8545"
      - "30303:30303"
    volumes:
      - ethereum_data:/root/.ethereum
    command: geth --cache=32 --syncmode=light --rpc --rpcaddr "0.0.0.0"
    deploy:
      placement:
        constraints:
          - node.hostname == pi4



  whoami:
    image: hypriot/rpi-whoami
    networks:
      - traefik
    depends_on:
      - traefik
    deploy:
      labels:
        - "traefik.backend=whoami"
        - "traefik.frontend.rule=Host:whoami.ffaerber.com"
        - "traefik.port=8000"
      replicas: 20
      update_config:
        parallelism: 5
      placement:
        constraints:
          - node.hostname != odroid

  koa_on_arm:
    image: ffaerber/koa-on-arm:latest
    networks:
      - traefik
    depends_on:
      - traefik
    deploy:
      labels:
        - "traefik.backend=koa"
        - "traefik.frontend.rule=Host:koa.ffaerber.com"
        - "traefik.port=3000"
      replicas: 10
      update_config:
        parallelism: 2
      placement:
        constraints:
          - node.hostname != odroid
